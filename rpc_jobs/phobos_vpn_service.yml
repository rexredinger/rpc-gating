- job:
    name: 'Phobos-VPN-Service'
    project-type: workflow
    parameters:
      - rpc_gating_params
      - phobos_params
    properties:
      - build-discarder:
          days-to-keep: 3
    dsl: |
      library "rpc-gating@${RPC_GATING_BRANCH}"
      if (env.GATEWAY == "from_creds"){
        withCredentials([
          string(
            credentialsId: 'phobos_vpn_gateway',
            variable: 'gw_from_creds'
          ),
        ]){
          env.GATEWAY = gw_from_creds
        }
      }

      def deploy_test(String label, String name){
        stage("Template script ${name}"){
          node(label){
            sh """
              cat >/tmp/phobos_vpn_service.sh <<EOS
              # install vpnc
              yum -v -y install vpnc

              # write out vpnc config file for phobos
              mkdir -p /etc/vpnc
              cat >/etc/vpnc/phobos.conf <<EOF
              IPSec gateway {{ gateway|quote }}

              IKE Authmode psk

              IPSec ID {{ ipsec_id }}
              IPSec secret {{ ipsec_secret|quote }}

              Xauth username {{ xauth_user|quote }}
              Xauth password {{ xauth_pass|quote }}
            EOF

              # write upstart config to keep vpnc running
              cat > /etc/init/vpnc <<EOF
              description "Cisco VPN connection to phobos"
              author      "RPC Release Engineering"

              start on filesystem
              stop on shutdown

              expect fork
              respawn
              exec /usr/sbin/vpnc --pid-file /run/vpnc/phobos.pid /etc/vpnc/phobos.conf
            EOF

              # Start vpnc service
              service vpnc start

              # test
              ping -w 5 ${env.PING_HOST} && echo "Success!"
            EOS
            """
          }
        }
        stage("Manual script run ${name}"){
          input(message: "Now run /tmp/phobos_vpn_service as root on ${name}")
        }
      }

      deploy_test("master", "Master")
      deploy_test("CentOS", "Slave")
